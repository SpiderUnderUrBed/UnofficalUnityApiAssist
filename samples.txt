start [object Object],[object Object],[object Object],[object Object] end
[
  { expression: { type: [32m'root'[m, value: [32m'$' [m} },[K
  {
    expression: { type: [32m'identifier'[m, value: [32m'Device' [m},[K
    scope: [32m'child'[m,[K
    operation: [32m'member'[K
[m
  },
  {
    expression: { type: [32m'identifier'[m, value: [32m'Application' [m},[K
    scope: [32m'child'[m,[K
    operation: [32m'member'[K
[m
  },
  {
    expression: { type: [32m'identifier'[m, value: [32m'systemLanguage' [m},[K
    scope: [32m'child'[m,[K
    operation: [32m'member'[K
[m
  }
]
other thing has a bunch of -1s and 0s
Script started on 2023-06-02 12:24:10+12:00 [TERM="xterm-256color" TTY="/dev/pts/20" COLUMNS="123" LINES="9"]
[?2004h]0;root@DaRocketMachine: /mnt/c/Users/DuttR/unofficalunityapiassistportalroot@DaRocketMachine:/mnt/c/Users/DuttR/unofficalunityapiassistportal# np [Km start
[?2004l
[6n[m]0;C:\Program Files\nodejs\node.exe[?25h]0;npm]0;npm start[?25l
> unofficalunityapiassistportal@0.0.1 start
> node C:\Users\DuttR\unofficalunityapiassistportal\build.js[8;1H[?25h[?25l[32m? [m[1mCull some of the snippets (select anything and choose a global option):[22m [2m(Use arrow keys)[36m[22m
> $.$ [m
  $.$.UnityEngine[106C
  $.$.AI[115C
  $.$.Component[108C
  $.$.Object[111C
  $.$.Analytics[108C
  $.$.Android[110C
[2m(Move up and down to reveal more choices)[22m[K[82C[32m[H? [m[1mCull some of the snippets (select anything and choose a global option):[22m [36m$.$[K[32m
? [m[1mChoose a action:[22m [2m(Use arrow keys)[22m[K[36m
> tree veiw (snippits)[K[m
  cull layers[K
  tree veiw full[K
  write tree[K
[K
[K
[K[123C[32m[2;1H? [m[1mChoose a action:[22m[K
  tree veiw (snippits)[K[36m
> cull layers[K[m
  tree veiw full[K
  write tree[K[111C[32m[2;1H? [m[1mChoose a action:[22m [36mcull layers[K[32m
? [m[1mPick a method to cull layers:[22m [2m(Use arrow keys)[22m[K[36m
> Load preset[K[m
  Write preset[K
[K[123C[32m[3;1H? [m[1mPick a method to cull layers:[22m [36mLoad preset[K[32m
? [m[1mPick a preset:[22m [2m(Use arrow keys)[22m[K[36m
> Preset #1[K[112C[m[32m[4;1H? [m[1mPick a preset:[22m [36mPreset #1[K[32m
? [m[1mDo you want to veiw or load the preset:[22m [2m(Use arrow keys)[22m[K[36m
> veiw [m
  load [32m[5;1H? [m[1mDo you want to veiw or load the preset:[22m[K
  veiw[K[36m
> load[K[117C[m[32m[5;1H? [m[1mDo you want to veiw or load the preset:[22m [36mload[K[32m
? [m[1mHow many times do you want to run it (max 10)[22m[K
[K[6;49H[?25h[32m
? [m[1mHow many times do you want to run it (max 10)[22m[K
{ action: [32m'' [m}

 // console.log(res_obj)
 console.log(j)
            if (
              !newRes.hasOwnProperty(res_obj[j].expression.value)
            ) {
              newRes[res_obj[j].expression.value] = {
                name: res_obj[j].expression.value,
              };
              if (layers.includes(0)) {
                let initials = "";
                for (let l = 0; l < res_obj[j].expression.value.length; l++) {
                  if (
                    res_obj[j].expression.value.split("")[l] ==
                    res_obj[j].expression.value.split("")[l].toUpperCase()
                  ) {
                    initials += res_obj[j].expression.value.split("")[l];
                  }
                }
                newRes[res_obj[j].expression.value].prefix = [
                  initials,
                  CreatePrefEnd(res_obj[j].expression.value)[0],
                  res_obj[j].expression.value,
                ];
              }
            }
[33m0
[m

 // console.log(res_obj)
 console.log(j)
            if (
              !newRes.hasOwnProperty(res_obj[j].expression.value)
            ) {
              newRes[res_obj[j].expression.value] = {
                name: res_obj[j].expression.value,
              };
              if (layers.includes(1)) {
                let initials = "";
                for (let l = 0; l < res_obj[j].expression.value.length; l++) {
                  if (
                    res_obj[j].expression.value.split("")[l] ==
                    res_obj[j].expression.value.split("")[l].toUpperCase()
                  ) {
                    initials += res_obj[j].expression.value.split("")[l];
                  }
                }
                newRes[res_obj[j].expression.value].prefix = [
                  initials,
                  CreatePrefEnd(res_obj[j].expression.value)[0],
                  res_obj[j].expression.value,
                ];
              }
            }
[33m1
[m

 // console.log(res_obj)
 console.log(j)
            if (
              !newRes.hasOwnProperty(res_obj[j].expression.value)
            ) {
              newRes[res_obj[j].expression.value] = {
                name: res_obj[j].expression.value,
              };
              if (layers.includes(2)) {
                let initials = "";
                for (let l = 0; l < res_obj[j].expression.value.length; l++) {
                  if (
                    res_obj[j].expression.value.split("")[l] ==
                    res_obj[j].expression.value.split("")[l].toUpperCase()
                  ) {
                    initials += res_obj[j].expression.value.split("")[l];
                  }
                }
                newRes[res_obj[j].expression.value].prefix = [
                  initials,
                  CreatePrefEnd(res_obj[j].expression.value)[0],
                  res_obj[j].expression.value,
                ];
              }
            }
[33m2
[m

 // console.log(res_obj)
 console.log(j)
            if (
              !newRes.hasOwnProperty(res_obj[j].expression.value)
            ) {
              newRes[res_obj[j].expression.value] = {
                name: res_obj[j].expression.value,
              };
              if (layers.includes(0)) {
                let initials = "";
                for (let l = 0; l < res_obj[j].expression.value.length; l++) {
                  if (
                    res_obj[j].expression.value.split("")[l] ==
                    res_obj[j].expression.value.split("")[l].toUpperCase()
                  ) {
                    initials += res_obj[j].expression.value.split("")[l];
                  }
                }
                newRes[res_obj[j].expression.value].prefix = [
                  initials,
                  CreatePrefEnd(res_obj[j].expression.value)[0],
                  res_obj[j].expression.value,
                ];
              }
            }
[33m0
[m

 // console.log(res_obj)
 console.log(j)
            if (
              !newRes.hasOwnProperty(res_obj[j].expression.value)
            ) {
              newRes[res_obj[j].expression.value] = {
                name: res_obj[j].expression.value,
              };
              if (layers.includes(1)) {
                let initials = "";
                for (let l = 0; l < res_obj[j].expression.value.length; l++) {
                  if (
                    res_obj[j].expression.value.split("")[l] ==
                    res_obj[j].expression.value.split("")[l].toUpperCase()
                  ) {
                    initials += res_obj[j].expression.value.split("")[l];
                  }
                }
                newRes[res_obj[j].expression.value].prefix = [
                  initials,
                  CreatePrefEnd(res_obj[j].expression.value)[0],
                  res_obj[j].expression.value,
                ];
              }
            }
[33m1
[m

 // console.log(res_obj)
 console.log(j)
            if (
              !newRes.hasOwnProperty(res_obj[j].expression.value)
            ) {
              newRes[res_obj[j].expression.value] = {
                name: res_obj[j].expression.value,
              };
              if (layers.includes(2)) {
                let initials = "";
                for (let l = 0; l < res_obj[j].expression.value.length; l++) {
                  if (
                    res_obj[j].expression.value.split("")[l] ==
                    res_obj[j].expression.value.split("")[l].toUpperCase()
                  ) {
                    initials += res_obj[j].expression.value.split("")[l];
                  }
                }
                newRes[res_obj[j].expression.value].prefix = [
                  initials,
                  CreatePrefEnd(res_obj[j].expression.value)[0],
                  res_obj[j].expression.value,
                ];
              }
            }
[33m2
[m

 // console.log(res_obj)
 console.log(j)
            if (
              !newRes.hasOwnProperty(res_obj[j].expression.value)
            ) {
              newRes[res_obj[j].expression.value] = {
                name: res_obj[j].expression.value,
              };
              if (layers.includes(0)) {
                let initials = "";
                for (let l = 0; l < res_obj[j].expression.value.length; l++) {
                  if (
                    res_obj[j].expression.value.split("")[l] ==
                    res_obj[j].expression.value.split("")[l].toUpperCase()
                  ) {
                    initials += res_obj[j].expression.value.split("")[l];
                  }
                }
                newRes[res_obj[j].expression.value].prefix = [
                  initials,
                  CreatePrefEnd(res_obj[j].expression.value)[0],
                  res_obj[j].expression.value,
                ];
              }
            }
[33m0
[m

 // console.log(res_obj)
 console.log(j)
            if (
              !newRes.hasOwnProperty(res_obj[j].expression.value)
            ) {
              newRes[res_obj[j].expression.value] = {
                name: res_obj[j].expression.value,
              };
              if (layers.includes(1)) {
                let initials = "";
                for (let l = 0; l < res_obj[j].expression.value.length; l++) {
                  if (
                    res_obj[j].expression.value.split("")[l] ==
                    res_obj[j].expression.value.split("")[l].toUpperCase()
                  ) {
                    initials += res_obj[j].expression.value.split("")[l];
                  }
                }
                newRes[res_obj[j].expression.value].prefix = [
                  initials,
                  CreatePrefEnd(res_obj[j].expression.value)[0],
                  res_obj[j].expression.value,
                ];
              }
            }
[33m1
[m

 // console.log(res_obj)
 console.log(j)
            if (
              !newRes.hasOwnProperty(res_obj[j].expression.value)
            ) {
              newRes[res_obj[j].expression.value] = {
                name: res_obj[j].expression.value,
              };
              if (layers.includes(2)) {
                let initials = "";
                for (let l = 0; l < res_obj[j].expression.value.length; l++) {
                  if (
                    res_obj[j].expression.value.split("")[l] ==
                    res_obj[j].expression.value.split("")[l].toUpperCase()
                  ) {
                    initials += res_obj[j].expression.value.split("")[l];
                  }
                }
                newRes[res_obj[j].expression.value].prefix = [
                  initials,
                  CreatePrefEnd(res_obj[j].expression.value)[0],
                  res_obj[j].expression.value,
                ];
              }
            }
[33m2
[m

 // console.log(res_obj)
 console.log(j)
            if (
              !newRes.hasOwnProperty(res_obj[j].expression.value)
            ) {
              newRes[res_obj[j].expression.value] = {
                name: res_obj[j].expression.value,
              };
              if (layers.includes(0)) {
                let initials = "";
                for (let l = 0; l < res_obj[j].expression.value.length; l++) {
                  if (
                    res_obj[j].expression.value.split("")[l] ==
                    res_obj[j].expression.value.split("")[l].toUpperCase()
                  ) {
                    initials += res_obj[j].expression.value.split("")[l];
                  }
                }
                newRes[res_obj[j].expression.value].prefix = [
                  initials,
                  CreatePrefEnd(res_obj[j].expression.value)[0],
                  res_obj[j].expression.value,
                ];
              }
            }
[33m0
[m

 // console.log(res_obj)
 console.log(j)
            if (
              !newRes.hasOwnProperty(res_obj[j].expression.value)
            ) {
              newRes[res_obj[j].expression.value] = {
                name: res_obj[j].expression.value,
              };
              if (layers.includes(1)) {
                let initials = "";
                for (let l = 0; l < res_obj[j].expression.value.length; l++) {
                  if (
                    res_obj[j].expression.value.split("")[l] ==
                    res_obj[j].expression.value.split("")[l].toUpperCase()
                  ) {
                    initials += res_obj[j].expression.value.split("")[l];
                  }
                }
                newRes[res_obj[j].expression.value].prefix = [
                  initials,
                  CreatePrefEnd(res_obj[j].expression.value)[0],
                  res_obj[j].expression.value,
                ];
              }
            }
[33m1
[m

 // console.log(res_obj)
 console.log(j)
            if (
              !newRes.hasOwnProperty(res_obj[j].expression.value)
            ) {
              newRes[res_obj[j].expression.value] = {
                name: res_obj[j].expression.value,
              };
              if (layers.includes(2)) {
                let initials = "";
                for (let l = 0; l < res_obj[j].expression.value.length; l++) {
                  if (
                    res_obj[j].expression.value.split("")[l] ==
                    res_obj[j].expression.value.split("")[l].toUpperCase()
                  ) {
                    initials += res_obj[j].expression.value.split("")[l];
                  }
                }
                newRes[res_obj[j].expression.value].prefix = [
                  initials,
                  CreatePrefEnd(res_obj[j].expression.value)[0],
                  res_obj[j].expression.value,
                ];
              }
            }
[33m2
[m

 // console.log(res_obj)
 console.log(j)
            if (
              !newRes.hasOwnProperty(res_obj[j].expression.value)
            ) {
              newRes[res_obj[j].expression.value] = {
                name: res_obj[j].expression.value,
              };
              if (layers.includes(0)) {
                let initials = "";
                for (let l = 0; l < res_obj[j].expression.value.length; l++) {
                  if (
                    res_obj[j].expression.value.split("")[l] ==
                    res_obj[j].expression.value.split("")[l].toUpperCase()
                  ) {
                    initials += res_obj[j].expression.value.split("")[l];
                  }
                }
                newRes[res_obj[j].expression.value].prefix = [
                  initials,
                  CreatePrefEnd(res_obj[j].expression.value)[0],
                  res_obj[j].expression.value,
                ];
              }
            }
[33m0
[m

 // console.log(res_obj)
 console.log(j)
            if (
              !newRes.hasOwnProperty(res_obj[j].expression.value)
            ) {
              newRes[res_obj[j].expression.value] = {
                name: res_obj[j].expression.value,
              };
              if (layers.includes(1)) {
                let initials = "";
                for (let l = 0; l < res_obj[j].expression.value.length; l++) {
                  if (
                    res_obj[j].expression.value.split("")[l] ==
                    res_obj[j].expression.value.split("")[l].toUpperCase()
                  ) {
                    initials += res_obj[j].expression.value.split("")[l];
                  }
                }
                newRes[res_obj[j].expression.value].prefix = [
                  initials,
                  CreatePrefEnd(res_obj[j].expression.value)[0],
                  res_obj[j].expression.value,
                ];
              }
            }
[33m1
[m

 // console.log(res_obj)
 console.log(j)
            if (
              !newRes.hasOwnProperty(res_obj[j].expression.value)
            ) {
              newRes[res_obj[j].expression.value] = {
                name: res_obj[j].expression.value,
              };
              if (layers.includes(2)) {
                let initials = "";
                for (let l = 0; l < res_obj[j].expression.value.length; l++) {
                  if (
                    res_obj[j].expression.value.split("")[l] ==
                    res_obj[j].expression.value.split("")[l].toUpperCase()
                  ) {
                    initials += res_obj[j].expression.value.split("")[l];
                  }
                }
                newRes[res_obj[j].expression.value].prefix = [
                  initials,
                  CreatePrefEnd(res_obj[j].expression.value)[0],
                  res_obj[j].expression.value,
                ];
              }
            }
[33m2
[m

 // console.log(res_obj)
 console.log(j)
            if (
              !newRes.hasOwnProperty(res_obj[j].expression.value)
            ) {
              newRes[res_obj[j].expression.value] = {
                name: res_obj[j].expression.value,
              };
              if (layers.includes(0)) {
                let initials = "";
                for (let l = 0; l < res_obj[j].expression.value.length; l++) {
                  if (
                    res_obj[j].expression.value.split("")[l] ==
                    res_obj[j].expression.value.split("")[l].toUpperCase()
                  ) {
                    initials += res_obj[j].expression.value.split("")[l];
                  }
                }
                newRes[res_obj[j].expression.value].prefix = [
                  initials,
                  CreatePrefEnd(res_obj[j].expression.value)[0],
                  res_obj[j].expression.value,
                ];
              }
            }
[33m0
[m

 // console.log(res_obj)
 console.log(j)
            if (
              !newRes.hasOwnProperty(res_obj[j].expression.value)
            ) {
              newRes[res_obj[j].expression.value] = {
                name: res_obj[j].expression.value,
              };
              if (layers.includes(1)) {
                let initials = "";
                for (let l = 0; l < res_obj[j].expression.value.length; l++) {
                  if (
                    res_obj[j].expression.value.split("")[l] ==
                    res_obj[j].expression.value.split("")[l].toUpperCase()
                  ) {
                    initials += res_obj[j].expression.value.split("")[l];
                  }
                }
                newRes[res_obj[j].expression.value].prefix = [
                  initials,
                  CreatePrefEnd(res_obj[j].expression.value)[0],
                  res_obj[j].expression.value,
                ];
              }
            }
[33m1
[m
